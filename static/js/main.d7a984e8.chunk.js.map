{"version":3,"sources":["Tmdb.jsx","components/MovieRow.jsx","components/FeaturedMovie.jsx","components/Header.jsx","components/Footer.jsx","components/Loading.jsx","App.jsx","index.js"],"names":["API_KEY","basicFetch","endpoint","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","MovieRow","setFeaturedData","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_name","FeaturedMovie","console","log","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","vote_average","getFullYear","number_of_seasons","href","id","join","Header","black","Footer","role","Loading","list","App","movieList","setMovieList","featuredData","blackHeader","setBlackHeader","useEffect","loadAll","Tmdb","originals","filter","randomChosen","floor","random","chosen","chosenInfo","scrollListener","scrollY","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7a984e8.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nconst API_KEY = \"50d42c272970d04355da24257ba2eb79\";\nconst API_BASE = \"https://api.themoviedb.org/3\";\n\nconst basicFetch = async (endpoint) => {\n  const req = await fetch(`${API_BASE}${endpoint}`);\n  const json = await req.json();\n  return json;\n};\n\nexport default {\n  getHomeList: async () => {\n    return [\n      {\n        slug: \"originals\",\n        title: \"Originais do MyFlix\",\n        items: await basicFetch(\n          `/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"trending\",\n        title: \"Recomendados para você\",\n        items: await basicFetch(\n          `/trending/all/week?language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"toprated\",\n        title: \"Em Alta\",\n        items: await basicFetch(\n          `/movie/top_rated?language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"action\",\n        title: \"Ação\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"comedy\",\n        title: \"Comédia\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"horror\",\n        title: \"Terror\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"romance\",\n        title: \"Romance\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n      {\n        slug: \"documentary\",\n        title: \"Documentario\",\n        items: await basicFetch(\n          `/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`\n        ),\n      },\n    ];\n  },\n  getMovieInfo: async (movieId, type) => {\n    let info = {};\n    if (movieId) {\n      switch (type) {\n        case \"movie\":\n          info = await basicFetch(\n            `/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`\n          );\n          break;\n        case \"tv\":\n          info = await basicFetch(\n            `/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`\n          );\n\n          break;\n        default:\n          info = null;\n          break;\n      }\n    }\n    return info;\n  },\n};\n","import React, { useState } from \"react\";\nimport \"./MovieRow.css\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\n\nconst MovieRow = ({ title, items, setFeaturedData }) => {\n  const [scrollX, setScrollX] = useState(0);\n  const handleLeftArrow = () => {\n    let x = scrollX + Math.round(window.innerWidth / 2);\n    if (x > 0) {\n      x = 0;\n    }\n    setScrollX(x);\n  };\n  const handleRighttArrow = () => {\n    let x = scrollX - Math.round(window.innerWidth / 2);\n    let listW = items.results.length * 200;\n    if (window.innerWidth - listW > x) {\n      x = window.innerWidth - listW - 60;\n    }\n    setScrollX(x);\n  };\n  return (\n    <div className=\"movieRow\">\n      <h2>{title}</h2>\n      <div className=\"movieRow--left\" onClick={handleLeftArrow}>\n        <NavigateBeforeIcon style={{ fontSize: 50 }} />\n      </div>\n      <div className=\"movieRow--right\" onClick={handleRighttArrow}>\n        <NavigateNextIcon style={{ fontSize: 50 }} />\n      </div>\n      <div className=\"movieRow--listarea\">\n        <div\n          className=\"movieRow--list\"\n          style={{ marginLeft: scrollX, width: items.results.length * 200 }}\n        >\n          {items.results.length > 0 &&\n            items.results.map((item, key) => (\n              <div\n                key={key}\n                className=\"movieRow--item\"\n                onClick={() => setFeaturedData(item)}\n              >\n                <img\n                  src={`https://image.tmdb.org/t/p/w300${item.poster_path}`}\n                  alt={item.original_name}\n                />\n              </div>\n            ))}\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default MovieRow;\n","import React from \"react\";\nimport \"./FeaturedMovie.css\";\n\nconst FeaturedMovie = ({ item }) => {\n  console.log(item);\n  let firstDate = new Date(item.first_air_date);\n  let genres = [];\n  for (let i in item.genres) {\n    genres.push(` ${item.genres[i].name}`);\n  }\n\n  let description = item.overview;\n  if (description.length > 200) {\n    description = description.substring(0, 200) + \"...\";\n  }\n\n  return (\n    <section\n      className=\"featured\"\n      style={{\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`,\n      }}\n    >\n      <div className=\"featured--vertical\">\n        <div className=\"featured--horizontal\">\n          <div className=\"featured--name\">{item.original_name}</div>\n          <div className=\"featured--info\">\n            <div className=\"featured--points\">{item.vote_average} pontos</div>\n            <div className=\"featured--year\">{firstDate.getFullYear()}</div>\n            <div className=\"featured--seasons\">\n              {item.number_of_seasons} Temporada\n              {item.number_of_seasons !== 1 ? \"s\" : \" \"}\n            </div>\n            <div className=\"featured--description\">{description}</div>\n            <div className=\"featured--buttons\">\n              <a className=\"featured--whachbutton\" href={`/watch/${item.id}`}>\n                ▶ Assistir\n              </a>\n              <a\n                className=\"featured--mylistbutton\"\n                href={`/list/add/${item.id}`}\n              >\n                {\" \"}\n                + Minha Lista\n              </a>\n            </div>\n            <div className=\"featured--genres\">\n              <strong>Gêneros:</strong>\n              {genres.join(\", \")}\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default FeaturedMovie;\n","import React from \"react\";\nimport \"./Header.css\";\n\nconst Header = ({ black }) => {\n  return (\n    <header className={black ? \"black\" : \"\"}>\n      <div className=\"header--logo\">\n        <a href=\"/\">\n          <img\n            src=\"https://logodownload.org/wp-content/uploads/2014/10/netflix-logo-5.png\"\n            alt=\"Netflix\"\n          />\n        </a>\n      </div>\n      <div className=\"header--user\">\n        <a href=\"/\">\n          <img\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\n            alt=\"usuario\"\n          />\n        </a>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      Feito com\n      <span role=\"img\" aria-label=\"coração\">\n        ❤️\n      </span>\n      Por Vinny Braga <br />\n      Direitos de imagem para a NetFlix\n      <br />\n      Api utilizada do site:\n      <br />\n      Themoviedb.org\n    </footer>\n  );\n};\nexport default Footer;\n","import React from \"react\";\nimport \"./Loading.css\";\n\nconst Loading = ({ list }) => {\n  return (\n    <div>\n      <div>\n        {list.length <= 0 && (\n          <img\n            className=\"loading\"\n            src=\"https://media.filmelier.com/noticias/br/2020/03/Netflix_LoadTime.gif\"\n            alt=\"Carregando\"\n          ></img>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default Loading;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Tmdb from \"./Tmdb\";\nimport MovieRow from \"./components/MovieRow\";\nimport FeaturedMovie from \"./components/FeaturedMovie\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Loading from \"./components/Loading\";\n\nconst App = () => {\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n  useEffect(() => {\n    const loadAll = async () => {\n      //Pegando a lista\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n      //Pegando um filme da lista\n      let originals = list.filter((i) => i.slug === \"originals\");\n      let randomChosen = Math.floor(\n        Math.random() * (originals[0].items.results.length - 1)\n      );\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, \"tv\");\n      setFeaturedData(chosenInfo);\n    };\n    loadAll();\n  }, []);\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if (window.scrollY > 15) {\n        setBlackHeader(true);\n      } else {\n        setBlackHeader(false);\n      }\n    };\n    window.addEventListener(\"scroll\", scrollListener);\n    return () => {\n      window.removeEventListener(\"scroll\", scrollListener);\n    };\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <Header black={blackHeader} />\n      {featuredData && <FeaturedMovie item={featuredData} />}\n\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <MovieRow\n            key={key}\n            title={item.title}\n            items={item.items}\n            setFeaturedData={setFeaturedData}\n          />\n        ))}\n      </section>\n      <Footer />\n      <Loading list={movieList} />\n    </div>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}